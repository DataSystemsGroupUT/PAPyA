from pyspark.sql import SparkSession 

class VTPartition:
    def __init__(self, partitionType):
        self.partitionType = partitionType
        
        spark = SparkSession.builder.appName("bench-ranking").getOrCreate()
        #data loading
        df_abstract = spark.read.load("./data/CSV_data/VT_csv/abstract.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_booktitle = spark.read.load("./data/CSV_data/VT_csv/booktitle.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_creator = spark.read.load("./data/CSV_data/VT_csv/creator.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_editor = spark.read.load("./data/CSV_data/VT_csv/editor.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_homepage = spark.read.load("./data/CSV_data/VT_csv/homepage.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_injournal = spark.read.load("./data/CSV_data/VT_csv/injournal.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_issued = spark.read.load("./data/CSV_data/VT_csv/issued.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_name = spark.read.load("./data/CSV_data/VT_csv/name.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_pages = spark.read.load("./data/CSV_data/VT_csv/pages.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_partof = spark.read.load("./data/CSV_data/VT_csv/partof.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_referencesV = spark.read.load("./data/CSV_data/VT_csv/references.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_references = spark.read.load("./data/CSV_data/PT_csv/Reference.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_seealso = spark.read.load("./data/CSV_data/VT_csv/seealso.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_subclassof = spark.read.load("./data/CSV_data/VT_csv/subclassof.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_title = spark.read.load("./data/CSV_data/VT_csv/title.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_type = spark.read.load("./data/CSV_data/VT_csv/type.csv", format="csv", sep=",", header="true", inferSchema="true")
        df_predicatesCombined = spark.read.load("./data/CSV_data/ST_csv/SingleStmtTable100K.csv", format="csv", sep=",", header="true", inferSchema="true")

        if(partitionType == 'subject'):
            df_abstract.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/abstract{partitionType}.csv")
            df_booktitle.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/booktitle{partitionType}.csv")
            df_creator.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/creator{partitionType}.csv")
            df_editor.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/editor{partitionType}.csv")
            df_homepage.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/homepage{partitionType}.csv")
            df_injournal.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/injournal{partitionType}.csv")
            df_issued.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/issued{partitionType}.csv")
            df_name.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/name{partitionType}.csv")
            df_pages.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/pages{partitionType}.csv")
            df_partof.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/partof{partitionType}.csv")
            df_references.repartition(84, "document").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/PT_csv/Reference{partitionType}.csv")
            df_referencesV.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/references{partitionType}.csv")
            df_seealso.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/seealso{partitionType}.csv")
            df_subclassof.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/subclassof{partitionType}.csv")
            df_title.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/title{partitionType}.csv")
            df_type.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/type{partitionType}.csv")
            df_predicatesCombined.repartition(84, "Subject").write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/ST_csv/SingleStmtTable100K{partitionType}.csv")
            print("CSV VT created, subject")

        elif(partitionType == 'horizontal'):
            df_abstract.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/abstract{partitionType}.csv")
            df_booktitle.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/booktitle{partitionType}.csv")
            df_creator.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/creator{partitionType}.csv")
            df_editor.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/editor{partitionType}.csv")
            df_homepage.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/homepage{partitionType}.csv")
            df_injournal.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/injournal{partitionType}.csv")
            df_issued.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/issued{partitionType}.csv")
            df_name.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/name{partitionType}.csv")
            df_pages.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/pages{partitionType}.csv")
            df_partof.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/partof{partitionType}.csv")
            df_references.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/PT_csv/Reference{partitionType}.csv")
            df_referencesV.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/references{partitionType}.csv")
            df_seealso.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/seealso{partitionType}.csv")
            df_subclassof.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/subclassof{partitionType}.csv")
            df_title.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/title{partitionType}.csv")
            df_type.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/VT_csv/type{partitionType}.csv")
            df_predicatesCombined.repartition(84).write.option("header", "true").format("csv").mode("overwrite").save(f"./data/CSV_data/ST_csv/SingleStmtTable100K{partitionType}.csv")
            print("CSV VT created, horizontal")